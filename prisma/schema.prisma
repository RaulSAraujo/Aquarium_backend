// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model user {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  username   String     @unique
  password   String
  email      String     @unique
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  aquariums  aquarium[]
}

model aquarium {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  icon            String
  format_aquarium String
  material        String
  thickness       Int
  capacity        Float
  height          Float
  width           Float
  depth           Float
  voltage         String
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt
  user            user?       @relation(fields: [userId], references: [id])
  userId          String?     @db.ObjectId
  accessories     accessory[]
  sensors         sensor[]
  pets            pet[]
}

model accessory {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  quantity   Int
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  aquarium   aquarium? @relation(fields: [aquariumId], references: [id])
  aquariumId String?   @db.ObjectId
}

model sensor {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  metric     String
  value      Int
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  aquarium   aquarium? @relation(fields: [aquariumId], references: [id])
  aquariumId String?   @db.ObjectId
}

model pet {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  species    String
  quantity   Int
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  aquarium   aquarium? @relation(fields: [aquariumId], references: [id])
  aquariumId String?   @db.ObjectId
}
